{"version":3,"sources":["speech.babel.js"],"names":["openSpeechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","language","speech","callback","addEventListener","e","transcript","Array","from","results","map","result","join","$","text","isFinal","stop","start","speechClick","console","log","sendText","context","ajax","type","url","data","success","res","resp","output","msg","SpeechSynthesisUtterance","speechSynthesis","speak","error","err"],"mappings":"YAAA,SAASA,yBACLC,OAAOC,kBAAoBD,OAAOC,mBAAqBD,OAAOE,uBAC9D,IAAMC,GAAc,GAAIF,kBAIxB,OADAE,GAAYC,SAAW,KAChBD,EAGX,QAASE,QAAOC,GACZ,GAAIH,GAAcJ,uBAClBI,GAAYI,iBAAiB,SAAU,SAAAC,GACnC,GAAIC,GAAaC,MAAMC,KAAKH,EAAEI,SAC7BC,IAAI,SAAAC,GAAA,MAAUA,GAAO,KACrBD,IAAI,SAAAC,GAAA,MAAUA,GAAOL,aACrBM,KAAK,GAENC,GAAE,WAAWC,KAAKR,GAEdD,EAAEI,QAAQ,GAAGM,UACbZ,EAASG,GACTN,EAAYgB,UAIpBhB,EAAYiB,QAGhB,QAASC,eACLC,QAAQC,IAAI,WACZP,EAAE,WAAWC,KAAK,IAClBZ,OAAO,SAASY,GACZO,SAASP,GACTK,QAAQC,IAAIN,KAMpB,QAASO,UAASP,EAAMQ,GACpBT,EAAEU,MACEC,KAAM,OACNC,IAAK,gBACLC,MAAOZ,KAAMA,EAAMQ,QAASA,GAC5BK,QAAS,SAASC,GACd,GAAIC,GAAOD,EAAIE,OAAOhB,KAAK,EAC3BQ,GAAUM,EAAIN,QACdH,QAAQC,IAAIS,EAEZ,IAAIE,GAAM,GAAIC,0BAAyBH,EACvChC,QAAOoC,gBAAgBC,MAAMH,IAEjCI,MAAO,SAASC,GACZjB,QAAQC,IAAIgB,MAhBxB,GAAId","file":"speech.babel.js","sourcesContent":["function openSpeechRecognition() {\n    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    // recognition.continuous = true;\n    // recognition.interimResults = true;\n    recognition.language = 'de';\n    return recognition;\n}\n\nfunction speech(callback){\n    let recognition = openSpeechRecognition();\n    recognition.addEventListener('result', e => {\n        let transcript = Array.from(e.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('');\n\n        $('#mytext').text(transcript);\n\n        if (e.results[0].isFinal) {\n            callback(transcript);\n            recognition.stop();\n\n        }\n    });\n    recognition.start();\n}\n\nfunction speechClick(){\n    console.log(\"clicked\");\n    $('#mytext').text(\"\");\n    speech(function(text){\n        sendText(text);\n        console.log(text);\n    });\n}\n\nvar context;\n\nfunction sendText(text, context){\n    $.ajax({\n        type: \"POST\",\n        url: \"/conversation\",\n        data: {text: text, context: context},\n        success: function(res){\n            var resp = res.output.text[0];\n            context = res.context;\n            console.log(resp);\n\n            var msg = new SpeechSynthesisUtterance(resp);\n            window.speechSynthesis.speak(msg);\n        },\n        error: function(err){\n            console.log(err);\n        }\n    });\n}"]}